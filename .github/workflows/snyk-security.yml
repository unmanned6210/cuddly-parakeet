# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which sets up Snyk to analyze the full Snyk platform (Snyk Open Source, Snyk Code,
# Snyk Container and Snyk Infrastructure as Code)
# The setup installs the Snyk CLI - for more details on the possible commands
# check https://docs.snyk.io/snyk-cli/cli-reference
# The results of Snyk Code are then uploaded to GitHub Security Code Scanning
#
# In order to use the Snyk Action you will need to have a Snyk API token.
# More details in https://github.com/snyk/actions#getting-your-snyk-token
# or you can signup for free at https://snyk.io/login
#
# For more examples, including how to limit scans to only high-severity issues
# and fail PR checks, see https://github.com/snyk/actions/

name: Snyk Security

on:
  push:
    branches: ["main" ]
  pull_request:
    branches: ["main"]

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Snyk setup
        uses: snyk/actions/setup@master

      - name: Snyk auth
        run: snyk auth ${{ secrets.SNYK_TOKEN }}
      
      - name: Snyk SCA
        run: sny test --sarif > snyk.sarif || true
      
      
      #- name: Run Snyk to check for vulnerabilities
      #  uses: snyk/actions/python-3.8@master
      #  continue-on-error: true # To make sure that SARIF upload gets called
      #  env:
      #    SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #  with:
      #    args: --sarif-file-output=snyk.sarif

      - name: Upload Snyk Vulnerability Scan Results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

      - name: Snyk Code test
      # The output won't be visible in the actions log but reading sarif is no bueno
        run: snyk code test --sarif > snyk-code.sarif  || true

      # Runs Snyk Code (SAST) analysis and uploads result to Snyk.
      # Only enable if you want to upload the dependencies to the Snyk web platform
      #- name: Snyk Code monitor
      #  run: snyk monitor --all-projects
      
       # Push the Snyk Code results into GitHub Code Scanning tab
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk-code.sarif
